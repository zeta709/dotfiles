# vim:filetype=zsh

my_git_info() {
	## NOTE
	## $ git symbolic-ref [--short] HEAD
	##   - no result if HEAD is detached
	## $ git rev-parse --abbrev-ref HEAD
	##   - wrong result if HEAD is detached: result is "HEAD"
	## $ git rev-parse [--short] HEAD
	##   - result is always SHA1
	## $ git branch
	##   - no result if the repo has no commit
	local MY_GIT_DIR_NEW="$(git rev-parse --git-dir 2>/dev/null)"
	if [[ -n "$MY_GIT_DIR_NEW" ]]; then
		MY_GIT_DIR_NEW="$(realpath "$MY_GIT_DIR_NEW")"
		local MY_GIT_FILE_STAMP="$(stat -c "%Y" "$MY_GIT_DIR_NEW/HEAD")"
		if [[ -z "$MY_GIT_DIR" ]] || [[ "$MY_GIT_DIR" != "$MY_GIT_DIR_NEW" ]] \
			|| [[ -z "$MY_GIT_STAMP" ]] || [[ "$MY_GIT_STAMP" -lt "$MY_GIT_FILE_STAMP" ]]; then
			MY_GIT_DIR="$MY_GIT_DIR_NEW"
			local MY_GIT_SYMREF="$(git symbolic-ref --short HEAD 2>/dev/null)"
			if [[ -n "$MY_GIT_SYMREF" ]]; then
				MY_GIT_INFO="%F{cyan}($MY_GIT_SYMREF)%f "
			else
				MY_GIT_INFO="%F{cyan}($(git branch 2>/dev/null | grep "^\*" | sed -E -e 's/\(HEAD detached (at|from) (.*)\)/%F{magenta}\2%F{cyan}/;s/\* //'))%f "
			fi
			MY_GIT_STAMP="$(date +%s)"
		fi
	else
		MY_GIT_DIR=""
		MY_GIT_INFO=""
		MY_GIT_STAMP=""
	fi
}

my_git_info "$@"
