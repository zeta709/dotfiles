## vim:filetype=gitconfig
[core]
	editor = vim
[push]
	default = simple
[diff]
	tool = vimdiff
#[difftool]
#	prompt = false
[merge]
	tool = vimdiff
[color]
	ui = auto
[oh-my-zsh]
	hide-status = 1
[pretty]
	## %m: mark (<, >, -)
	my = format:%C(auto)%h|%C(green)%an%C(reset)%C(auto)|%ad| %s%d
	my2 = format:%m %C(auto)%h|%C(green)%an%C(reset)%C(auto)|%ad| %s%d
	my3 = format:%m %C(auto)%h|%C(green)%an%C(reset)%C(auto)|%ad| %w(0,0,4)%s%+b%-
	my-nc = format:%h|%an|%ad| %s%d
	my2-nc = format:%m %h|%an|%ad| %s%d
[log]
	date = iso
[alias]
	ci = commit
	co = checkout
	st = status
	clean-all = clean -fdx -e "*.bk" -e "*.bak" -e "*.orig" -e "*.my" -e ".gdb_history" -e "cscope.*" -e "tags"
	clean-ign = clean -fX
	grep-cnt = grep --count
	grep-grp = grep --break --heading --line-number
	logs = log --decorate --pretty=my --date=short
	unmerged-s = log --cherry-pick --pretty=my2 --date=short --no-merges --right-only
	unmerged-x = log --cherry-pick --pretty=my3 --date=short --no-merges --right-only
	# unmerged-s  = "!f() { git unmerged-s-internal $@ | grep -v '^commit [0-9a-z]*'; }; f"
	# unmerged-x  = "!f() { git unmerged-x-internal $@ | grep -v '^commit [0-9a-z]*'; }; f"
	skip = update-index --skip-worktree
	no-skip = update-index --no-skip-worktree
	ls-skip = !git ls-files -v | grep "^S"

	# find-merge/show-merge: https://stackoverflow.com/questions/8475448/find-merge-commit-which-include-a-specific-commit
	# git find-merge <SHA-1> [<branch>]
	find-merge = "!sh -c 'commit=$0 && branch=${1:-HEAD} && (git rev-list $commit..$branch --ancestry-path | cat -n; git rev-list $commit..$branch --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2'"
	show-merge = "!sh -c 'merge=$(git find-merge $0 $1) && [ -n \"$merge\" ] && git show $merge'"
